#!/bin/bash

#strict mode
set -o errexit    # same as 'set -e'. exit immediately if any statement fails.
set -o nounset    # same as 'set -u'. exit immediately if you try to use an
                  # uninitialized variable.
set -o pipefail   # set the return value of a pipeline to the value of the rightmost
                  # command to exit with a non-zero status, or zero if all commands
                  # in the pipeline exit successfully.
set -o errtrace   # shell functions inherit an ERR trap.
shopt -s failglob # glob patterns fail to match filenames result in an error.
IFS=$'\n\t'       # don't treat space as separator.

df_script_dir="$( cd "$(dirname "$0")" ; pwd -P )"
df_confirm=true
df_verbose=false
df_args=()

while (( $# > 0 )); do
    case "$1" in
        -n|--noconfirm)
            df_confirm=false
            ;;
        -v|--verbose)
            df_verbose=true
            ;;
        --help|--*|-*)
            echo "Usage: $0 [OPTIONS] [SCRIPT...]"
            echo "Options:"
            echo " --help           show this message"
            echo " -n, --noconfirm  do not ask for any confirmation"
            echo " -v, --verbose    show the action that made no change"
            exit 1
            ;;
        *)
            df_args+=("$1")
            ;;
    esac
    shift
done

if (( ${#df_args[@]} == 0 )); then
    shopt -s nullglob
    shopt -u failglob
    df_scripts=("$df_script_dir"/*.df.sh "$df_script_dir"/*/main.df.sh)
    shopt -s failglob
    shopt -u nullglob
else
    for df_arg in "${df_args[@]}"; do
        df_arg_full="$df_script_dir/$df_arg"

        if [[ -e $df_arg_full/main.df.sh ]]; then
            df_script="$df_arg_full/main.df.sh"
        else
            df_script="${df_arg_full}.df.sh"
        fi

        if [[ ! -e $df_script ]]; then
            echo "error: script $df_script not found" >&2
            exit 1
        fi

        df_scripts+=("$df_script")
    done
fi

for df_script in "${df_scripts[@]}"; do
    if [[ $df_script =~ /main\.sh$ ]]; then
        df_script_name="$(basename "$(dirname "$df_script")")"
    else
        df_script_name="${df_script%.df.sh}"
    fi

    (cd "$(dirname "$df_script")" && . "$df_script")
done
