# -*- mode: ruby -*-
# vi: set ft=ruby :
#
vmname = "flare-vm"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure('2') do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = 'gusztavvargadr/windows-11'

  config.vm.boot_timeout = 1000

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network 'private_network', type: 'dhcp'

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder '~/misc/offsec', '/share'

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessable to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.provider :virtualbox do |v|
    # XXX workaround for hashicorp/vagrant#7319
    # unmap shared folder and remap it as read-only.
    v.customize ['sharedfolder', 'remove', :id, '--name', 'vagrant']
    v.customize ['sharedfolder', 'add', :id, '--name', 'vagrant', '--hostpath', File.dirname(__FILE__), '--readonly']
  end

  config.vm.guest = :windows
  config.vm.communicator = 'winrm'
  config.winssh.shell = 'powershell'

  # XXX workaround for vagrant bug
  # https://github.com/gusztavvargadr/packer/issues/420
  config.winrm.transport = :plaintext
  config.winrm.basic_auth_only = true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider 'virtualbox' do |vb|
    vb.name = vmname

    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    vb.cpus = `nproc`.to_i
    # Customize the amount of memory on the VM:
    vb.memory = '4096'

    vb.customize ['modifyvm', :id, '--vram', '256']
    # vb.customize ['modifyvm', :id, '--accelerate3d', 'on']
    vb.customize ['modifyvm', :id, '--clipboard', 'bidirectional']

    # Enable audio
    if RUBY_PLATFORM =~ /darwin/
      vb.customize ["modifyvm", :id, '--audio', 'coreaudio']
    elsif RUBY_PLATFORM =~ /mingw|mswin|bccwin|cygwin|emx/
      vb.customize ["modifyvm", :id, '--audio', 'dsound']
    elsif RUBY_PLATFORM =~ /linux/
      vb.customize ["modifyvm", :id, '--audio', 'pulse']
    end

    vb.customize ["modifyvm", :id, '--audio-controller', 'hda']

    # Enable usb host
    vb.customize ["modifyvm", :id, "--usb", "on"]
    vb.customize ["modifyvm", :id, "--usbehci", "on"]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision 'shell', privileged: true, inline: <<-SHELL
    # Japanese
    Install-Language ja-JP -CopyToSettings
    Set-SystemPreferredUILanguage ja-JP
    Set-WinUILanguageOverride -Language ja-JP
    Set-WinCultureFromLanguageListOptOut -OptOut $False
    Set-WinHomeLocation -GeoId 0x7A
    Set-WinSystemLocale -SystemLocale ja-JP
    Set-WinUserLanguageList -LanguageList ja-JP -Force
    Set-WinDefaultInputMethodOverride -InputTip "0411:00000411"
    Copy-UserInternationalSettingsToSystem -welcomescreen $true -newuser $true

    # JST
    Set-TimeZone -id "Tokyo Standard Time"

    # JIS keyboard
    Set-ItemProperty HKLM:\\System\\CurrentControlSet\\Services\\i8042prt\\Parameters -name "LayerDriver JPN" -value "kbd106.dll"
    Set-ItemProperty HKLM:\\System\\CurrentControlSet\\Services\\i8042prt\\Parameters -name "OverrideKeyboardIdentifier" -value "PCAT_106KEY"
    Set-ItemProperty HKLM:\\System\\CurrentControlSet\\Services\\i8042prt\\Parameters -name "OverridekeyboardSubtype" -value "2"
    Set-ItemProperty HKLM:\\System\\CurrentControlSet\\Services\\i8042prt\\Parameters -name "OverridekeyboardType" -value "7"

    # Remap caps lock to control
    $hexified = "00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00".Split(',') | % { "0x$_"}
    $RegistryPath = 'HKLM:\\System\\CurrentControlSet\\Control\\Keyboard Layout'
    if (-NOT (Test-Path $RegistryPath)) {
      New-ItemProperty -Path $RegistryPath -Name "Scancode Map" -PropertyType Binary -Value ([byte[]]$hexified)
    } else {
      Set-ItemProperty -Path $RegistryPath -Name "Scancode Map" -Value ([byte[]]$hexified)
    }
  SHELL
end
